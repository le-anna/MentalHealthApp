{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/annale/Documents/MentalHealthApp/Frontend/MentalHealthFrontend/node_modules/react-native-calendar/components/Day.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport styles from \"./styles\";\n\nvar Day = function (_Component) {\n  _inherits(Day, _Component);\n\n  var _super = _createSuper(Day);\n\n  function Day() {\n    var _this;\n\n    _classCallCheck(this, Day);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.dayCircleStyle = function (isWeekend, isSelected, isToday, event) {\n      var customStyle = _this.props.customStyle;\n      var dayCircleStyle = [styles.dayCircleFiller, customStyle.dayCircleFiller];\n\n      if (isSelected) {\n        if (isToday) {\n          dayCircleStyle.push(styles.currentDayCircle, customStyle.currentDayCircle);\n        } else {\n          dayCircleStyle.push(styles.selectedDayCircle, customStyle.selectedDayCircle);\n        }\n      }\n\n      if (event) {\n        if (isSelected) {\n          dayCircleStyle.push(styles.hasEventDaySelectedCircle, customStyle.hasEventDaySelectedCircle, event.hasEventDaySelectedCircle);\n        } else {\n          dayCircleStyle.push(styles.hasEventCircle, customStyle.hasEventCircle, event.hasEventCircle);\n        }\n      }\n\n      return dayCircleStyle;\n    };\n\n    _this.dayTextStyle = function (isWeekend, isSelected, isToday, event) {\n      var customStyle = _this.props.customStyle;\n      var dayTextStyle = [styles.day, customStyle.day];\n\n      if (isToday && !isSelected) {\n        dayTextStyle.push(styles.currentDayText, customStyle.currentDayText);\n      } else if (isToday || isSelected) {\n        dayTextStyle.push(styles.selectedDayText, customStyle.selectedDayText);\n      } else if (isWeekend) {\n        dayTextStyle.push(styles.weekendDayText, customStyle.weekendDayText);\n      }\n\n      if (event) {\n        dayTextStyle.push(styles.hasEventText, customStyle.hasEventText, event.hasEventText);\n      }\n\n      return dayTextStyle;\n    };\n\n    _this.dayButtonStyle = function (isWeekend, isSelected, isToday, event) {\n      var customStyle = _this.props.customStyle;\n      var dayButtonStyle, dayWidth;\n\n      if (customStyle.hasOwnProperty('dayButton') && StyleSheet.flatten(customStyle.dayButton).hasOwnProperty('width')) {\n        dayButtonStyle = [styles.dayButton, customStyle.dayButton];\n      } else {\n        dayWidth = Dimensions.get('window').width / 7;\n        dayButtonStyle = [styles.dayButton, customStyle.dayButton, {\n          width: dayWidth\n        }];\n      }\n\n      if (isWeekend) {\n        dayButtonStyle.push(styles.weekendDayButton, customStyle.weekendDayButton);\n      }\n\n      return dayButtonStyle;\n    };\n\n    return _this;\n  }\n\n  _createClass(Day, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          caption = _this$props.caption,\n          customStyle = _this$props.customStyle;\n      var _this$props2 = this.props,\n          filler = _this$props2.filler,\n          event = _this$props2.event,\n          isWeekend = _this$props2.isWeekend,\n          isSelected = _this$props2.isSelected,\n          isToday = _this$props2.isToday,\n          showEventIndicators = _this$props2.showEventIndicators;\n      var dayButtonFillerStyle, dayWidth;\n\n      if (customStyle.hasOwnProperty('dayButtonFiller') && StyleSheet.flatten(customStyle.dayButtonFiller).hasOwnProperty('width')) {\n        dayButtonFillerStyle = [styles.dayButtonFiller, customStyle.dayButtonFiller];\n      } else {\n        dayWidth = Dimensions.get('window').width / 7;\n        dayButtonFillerStyle = [styles.dayButtonFiller, customStyle.dayButtonFiller, {\n          width: dayWidth\n        }];\n      }\n\n      return filler ? React.createElement(TouchableWithoutFeedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: dayButtonFillerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.day, customStyle.day],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }))) : React.createElement(TouchableOpacity, {\n        onPress: this.props.onPress,\n        onLongPress: this.props.onLongPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: this.dayButtonStyle(isWeekend, isSelected, isToday, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: this.dayCircleStyle(isWeekend, isSelected, isToday, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: this.dayTextStyle(isWeekend, isSelected, isToday, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }, caption)), showEventIndicators && React.createElement(View, {\n        style: [styles.eventIndicatorFiller, customStyle.eventIndicatorFiller, event && styles.eventIndicator, event && customStyle.eventIndicator, event && event.eventIndicator],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return Day;\n}(Component);\n\nDay.defaultProps = {\n  customStyle: {}\n};\nDay.propTypes = {\n  caption: PropTypes.any,\n  customStyle: PropTypes.object,\n  filler: PropTypes.bool,\n  event: PropTypes.object,\n  isSelected: PropTypes.bool,\n  isToday: PropTypes.bool,\n  isWeekend: PropTypes.bool,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  showEventIndicators: PropTypes.bool\n};\nexport { Day as default };","map":{"version":3,"sources":["/Users/annale/Documents/MentalHealthApp/Frontend/MentalHealthFrontend/node_modules/react-native-calendar/components/Day.js"],"names":["React","Component","PropTypes","styles","Day","dayCircleStyle","isWeekend","isSelected","isToday","event","customStyle","props","dayCircleFiller","push","currentDayCircle","selectedDayCircle","hasEventDaySelectedCircle","hasEventCircle","dayTextStyle","day","currentDayText","selectedDayText","weekendDayText","hasEventText","dayButtonStyle","dayWidth","hasOwnProperty","StyleSheet","flatten","dayButton","Dimensions","get","width","weekendDayButton","caption","filler","showEventIndicators","dayButtonFillerStyle","dayButtonFiller","onPress","onLongPress","eventIndicatorFiller","eventIndicator","defaultProps","propTypes","any","object","bool","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n  Dimensions,\n  StyleSheet,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles';\n\nexport default class Day extends Component {\n  static defaultProps = {\n    customStyle: {},\n  }\n\n  static propTypes = {\n    caption: PropTypes.any,\n    customStyle: PropTypes.object,\n    filler: PropTypes.bool,\n    event: PropTypes.object,\n    isSelected: PropTypes.bool,\n    isToday: PropTypes.bool,\n    isWeekend: PropTypes.bool,\n    onPress: PropTypes.func,\n    onLongPress: PropTypes.func,\n    showEventIndicators: PropTypes.bool,\n  }\n\n  dayCircleStyle = (isWeekend, isSelected, isToday, event) => {\n    const { customStyle } = this.props;\n    const dayCircleStyle = [styles.dayCircleFiller, customStyle.dayCircleFiller];\n\n    if (isSelected) {\n      if (isToday) {\n        dayCircleStyle.push(styles.currentDayCircle, customStyle.currentDayCircle);\n      } else {\n        dayCircleStyle.push(styles.selectedDayCircle, customStyle.selectedDayCircle);\n      }\n    }\n\n    if (event) {\n      if (isSelected) {\n        dayCircleStyle.push(styles.hasEventDaySelectedCircle, customStyle.hasEventDaySelectedCircle, event.hasEventDaySelectedCircle);\n      } else {\n        dayCircleStyle.push(styles.hasEventCircle, customStyle.hasEventCircle, event.hasEventCircle);\n      }\n    }\n    return dayCircleStyle;\n  }\n\n  dayTextStyle = (isWeekend, isSelected, isToday, event) => {\n    const { customStyle } = this.props;\n    const dayTextStyle = [styles.day, customStyle.day];\n\n    if (isToday && !isSelected) {\n      dayTextStyle.push(styles.currentDayText, customStyle.currentDayText);\n    } else if (isToday || isSelected) {\n      dayTextStyle.push(styles.selectedDayText, customStyle.selectedDayText);\n    } else if (isWeekend) {\n      dayTextStyle.push(styles.weekendDayText, customStyle.weekendDayText);\n    }\n\n    if (event) {\n      dayTextStyle.push(styles.hasEventText, customStyle.hasEventText, event.hasEventText)\n    }\n    return dayTextStyle;\n  }\n\n  dayButtonStyle = (isWeekend, isSelected, isToday, event) => {\n    const { customStyle } = this.props;\n    let dayButtonStyle, dayWidth;\n\n    if (customStyle.hasOwnProperty('dayButton') && StyleSheet.flatten(customStyle.dayButton).hasOwnProperty('width')) {\n      dayButtonStyle = [styles.dayButton, customStyle.dayButton];\n    } else {\n      dayWidth = Dimensions.get('window').width / 7;\n      dayButtonStyle = [styles.dayButton, customStyle.dayButton, {width: dayWidth}];\n    }\n\n    if (isWeekend) {\n      dayButtonStyle.push(styles.weekendDayButton, customStyle.weekendDayButton);\n    }\n    return dayButtonStyle;\n  }\n\n  render() {\n    let { caption, customStyle } = this.props;\n    const {\n      filler,\n      event,\n      isWeekend,\n      isSelected,\n      isToday,\n      showEventIndicators,\n    } = this.props;\n\n    let dayButtonFillerStyle, dayWidth;\n    if (customStyle.hasOwnProperty('dayButtonFiller') && StyleSheet.flatten(customStyle.dayButtonFiller).hasOwnProperty('width')) {\n      dayButtonFillerStyle = [styles.dayButtonFiller, customStyle.dayButtonFiller];\n    } else {\n      dayWidth = Dimensions.get('window').width / 7;\n      dayButtonFillerStyle = [styles.dayButtonFiller, customStyle.dayButtonFiller, {width: dayWidth}];\n    }\n\n    return filler\n      ? (\n        <TouchableWithoutFeedback>\n          <View style={dayButtonFillerStyle}>\n            <Text style={[styles.day, customStyle.day]} />\n          </View>\n        </TouchableWithoutFeedback>\n      )\n      : (\n        <TouchableOpacity\n          onPress={this.props.onPress}\n          onLongPress={this.props.onLongPress}\n        >\n          <View style={this.dayButtonStyle(isWeekend, isSelected, isToday, event)}>\n            <View style={this.dayCircleStyle(isWeekend, isSelected, isToday, event)}>\n              <Text style={this.dayTextStyle(isWeekend, isSelected, isToday, event)}>{caption}</Text>\n            </View>\n            {showEventIndicators &&\n            <View style={[\n              styles.eventIndicatorFiller,\n              customStyle.eventIndicatorFiller,\n              event && styles.eventIndicator,\n              event && customStyle.eventIndicator,\n              event && event.eventIndicator]}\n            />\n            }\n          </View>\n        </TouchableOpacity>\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}